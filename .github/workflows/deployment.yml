name: Build, lint, test and Deploy to Vercel
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
  NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
  NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
  NEXT_PUBLIC_VIA_CEP_API_URL: ${{ secrets.NEXT_PUBLIC_VIA_CEP_API_URL }}
  
on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]

jobs:
  install:
    name: 📥 Installing Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm install
  lint:
    name: 🧹 Linting
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run lint
  test:
    name: 🧪 Testing
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run test
  build: 
    name: 🏭 Building
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run build
      - name: Archive production artifactss
        uses: actions/upload-artifact@v2
        with:
          name: nextjs-build
          path: .next/
  deploy-production:
    name: 🚀 Deploy (Production)
    needs: [install, lint, test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} 
  push_to_registry:
    needs: build
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: echo "${{ secrets.ENV }}" | base64 -d > .env
      
      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/igrejapentecostalreformada:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/igrejapentecostalreformada:latest
              